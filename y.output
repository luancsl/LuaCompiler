Terminals unused in grammar

   ELSEIF
   BREAK
   RETURN
   LOCAL
   T_INT
   T_REAL
   BLOCO
   STMT
   EXPR
   ATTR
   CONC
   '^'


State 1 conflicts: 1 shift/reduce
State 5 conflicts: 14 shift/reduce
State 14 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program bloco
    2        | /* empty */

    3 bloco: openc stmts closec

    4 openc: /* empty */

    5 closec: /* empty */

    6 stmts: stmts stmt
    7      | /* empty */

    8 stmt: expr
    9     | print
   10     | read
   11     | if
   12     | while
   13     | function
   14     | attr

   15 expr: '(' expr ')'
   16     | expr EQ expr
   17     | expr LESS expr
   18     | expr BIGG expr
   19     | expr NE expr
   20     | expr LE expr
   21     | expr GE expr
   22     | expr ADD expr
   23     | expr SUB expr
   24     | expr MUL expr
   25     | expr DIV expr
   26     | expr MOD expr
   27     | '-' expr
   28     | NUMBER
   29     | ID
   30     | STRING
   31     | functioncall
   32     | NIL
   33     | TRUE
   34     | FALSE
   35     | NOT expr
   36     | expr AND expr
   37     | expr OR expr

   38 attr: ID '=' expr

   39 if: IF expr THEN bloco END
   40   | IF expr THEN bloco ELSE bloco END

   41 while: WHILE expr DO bloco END

   42 function: FUNCTION ID '(' _param ')' bloco END

   43 _param: _paramlist
   44       | /* empty */

   45 _paramlist: ID
   46           | _paramlist ',' ID

   47 functioncall: ID '(' _arg ')'

   48 _arg: _arglist
   49     | /* empty */

   50 _arglist: expr
   51         | _arglist ',' expr

   52 read: READ

   53 print: PRINT '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 42 47 53
')' (41) 15 42 47 53
',' (44) 46 51
'-' (45) 27
'=' (61) 38
'^' (94)
error (256)
NIL (258) 32
PRINT (259) 53
READ (260) 52
IF (261) 39 40
THEN (262) 39 40
ELSE (263) 40
ELSEIF (264)
WHILE (265) 41
DO (266) 41
END (267) 39 40 41 42
BREAK (268)
RETURN (269)
LOCAL (270)
FUNCTION (271) 42
NUMBER (272) 28
STRING (273) 30
ID (274) 29 38 42 45 46 47
T_INT (275)
T_REAL (276)
BLOCO (277)
STMT (278)
EXPR (279)
ATTR (280)
TRUE (281) 33
FALSE (282) 34
OR (283) 37
AND (284) 36
GE (285) 21
LE (286) 20
LESS (287) 17
BIGG (288) 18
NE (289) 19
EQ (290) 16
CONC (291)
SUB (292) 23
ADD (293) 22
MOD (294) 26
DIV (295) 25
MUL (296) 24
NOT (297) 35
UNARY (298)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2, on right: 0 1
bloco (52)
    on left: 3, on right: 1 39 40 41 42
openc (53)
    on left: 4, on right: 3
closec (54)
    on left: 5, on right: 3
stmts (55)
    on left: 6 7, on right: 3 6
stmt (56)
    on left: 8 9 10 11 12 13 14, on right: 6
expr (57)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
    33 34 35 36 37, on right: 8 15 16 17 18 19 20 21 22 23 24 25 26
    27 35 36 37 38 39 40 41 50 51 53
attr (58)
    on left: 38, on right: 14
if (59)
    on left: 39 40, on right: 11
while (60)
    on left: 41, on right: 12
function (61)
    on left: 42, on right: 13
_param (62)
    on left: 43 44, on right: 42
_paramlist (63)
    on left: 45 46, on right: 43 46
functioncall (64)
    on left: 47, on right: 31
_arg (65)
    on left: 48 49, on right: 47
_arglist (66)
    on left: 50 51, on right: 48 51
read (67)
    on left: 52, on right: 10
print (68)
    on left: 53, on right: 9


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . bloco

    $end  shift, and go to state 2

    $end      [reduce using rule 4 (openc)]
    $default  reduce using rule 4 (openc)

    bloco  go to state 3
    openc  go to state 4


state 2

    0 $accept: program $end .

    $default  accept


state 3

    1 program: program bloco .

    $default  reduce using rule 1 (program)


state 4

    3 bloco: openc . stmts closec

    $default  reduce using rule 7 (stmts)

    stmts  go to state 5


state 5

    3 bloco: openc stmts . closec
    6 stmts: stmts . stmt

    NIL       shift, and go to state 6
    PRINT     shift, and go to state 7
    READ      shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FUNCTION  shift, and go to state 11
    NUMBER    shift, and go to state 12
    STRING    shift, and go to state 13
    ID        shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    NOT       shift, and go to state 17
    '('       shift, and go to state 18
    '-'       shift, and go to state 19

    NIL       [reduce using rule 5 (closec)]
    PRINT     [reduce using rule 5 (closec)]
    READ      [reduce using rule 5 (closec)]
    IF        [reduce using rule 5 (closec)]
    WHILE     [reduce using rule 5 (closec)]
    FUNCTION  [reduce using rule 5 (closec)]
    NUMBER    [reduce using rule 5 (closec)]
    STRING    [reduce using rule 5 (closec)]
    ID        [reduce using rule 5 (closec)]
    TRUE      [reduce using rule 5 (closec)]
    FALSE     [reduce using rule 5 (closec)]
    NOT       [reduce using rule 5 (closec)]
    '('       [reduce using rule 5 (closec)]
    '-'       [reduce using rule 5 (closec)]
    $default  reduce using rule 5 (closec)

    closec        go to state 20
    stmt          go to state 21
    expr          go to state 22
    attr          go to state 23
    if            go to state 24
    while         go to state 25
    function      go to state 26
    functioncall  go to state 27
    read          go to state 28
    print         go to state 29


state 6

   32 expr: NIL .

    $default  reduce using rule 32 (expr)


state 7

   53 print: PRINT . '(' expr ')'

    '('  shift, and go to state 30


state 8

   52 read: READ .

    $default  reduce using rule 52 (read)


state 9

   39 if: IF . expr THEN bloco END
   40   | IF . expr THEN bloco ELSE bloco END

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 32
    functioncall  go to state 27


state 10

   41 while: WHILE . expr DO bloco END

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 33
    functioncall  go to state 27


state 11

   42 function: FUNCTION . ID '(' _param ')' bloco END

    ID  shift, and go to state 34


state 12

   28 expr: NUMBER .

    $default  reduce using rule 28 (expr)


state 13

   30 expr: STRING .

    $default  reduce using rule 30 (expr)


state 14

   29 expr: ID .
   38 attr: ID . '=' expr
   47 functioncall: ID . '(' _arg ')'

    '('  shift, and go to state 35
    '='  shift, and go to state 36

    '('       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


state 15

   33 expr: TRUE .

    $default  reduce using rule 33 (expr)


state 16

   34 expr: FALSE .

    $default  reduce using rule 34 (expr)


state 17

   35 expr: NOT . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 37
    functioncall  go to state 27


state 18

   15 expr: '(' . expr ')'

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 38
    functioncall  go to state 27


state 19

   27 expr: '-' . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 39
    functioncall  go to state 27


state 20

    3 bloco: openc stmts closec .

    $default  reduce using rule 3 (bloco)


state 21

    6 stmts: stmts stmt .

    $default  reduce using rule 6 (stmts)


state 22

    8 stmt: expr .
   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52

    $default  reduce using rule 8 (stmt)


state 23

   14 stmt: attr .

    $default  reduce using rule 14 (stmt)


state 24

   11 stmt: if .

    $default  reduce using rule 11 (stmt)


state 25

   12 stmt: while .

    $default  reduce using rule 12 (stmt)


state 26

   13 stmt: function .

    $default  reduce using rule 13 (stmt)


state 27

   31 expr: functioncall .

    $default  reduce using rule 31 (expr)


state 28

   10 stmt: read .

    $default  reduce using rule 10 (stmt)


state 29

    9 stmt: print .

    $default  reduce using rule 9 (stmt)


state 30

   53 print: PRINT '(' . expr ')'

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 53
    functioncall  go to state 27


state 31

   29 expr: ID .
   47 functioncall: ID . '(' _arg ')'

    '('  shift, and go to state 35

    '('       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


state 32

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   39 if: IF expr . THEN bloco END
   40   | IF expr . THEN bloco ELSE bloco END

    THEN  shift, and go to state 54
    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52


state 33

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   41 while: WHILE expr . DO bloco END

    DO    shift, and go to state 55
    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52


state 34

   42 function: FUNCTION ID . '(' _param ')' bloco END

    '('  shift, and go to state 56


state 35

   47 functioncall: ID '(' . _arg ')'

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    $default  reduce using rule 49 (_arg)

    expr          go to state 57
    functioncall  go to state 27
    _arg          go to state 58
    _arglist      go to state 59


state 36

   38 attr: ID '=' . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 60
    functioncall  go to state 27


state 37

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   35     | NOT expr .
   36     | expr . AND expr
   37     | expr . OR expr

    $default  reduce using rule 35 (expr)


state 38

   15 expr: '(' expr . ')'
   16     | expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52
    ')'   shift, and go to state 61


state 39

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   27     | '-' expr .
   36     | expr . AND expr
   37     | expr . OR expr

    $default  reduce using rule 27 (expr)


state 40

   37 expr: expr OR . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 62
    functioncall  go to state 27


state 41

   36 expr: expr AND . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 63
    functioncall  go to state 27


state 42

   21 expr: expr GE . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 64
    functioncall  go to state 27


state 43

   20 expr: expr LE . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 65
    functioncall  go to state 27


state 44

   17 expr: expr LESS . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 66
    functioncall  go to state 27


state 45

   18 expr: expr BIGG . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 67
    functioncall  go to state 27


state 46

   19 expr: expr NE . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 68
    functioncall  go to state 27


state 47

   16 expr: expr EQ . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 69
    functioncall  go to state 27


state 48

   23 expr: expr SUB . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 70
    functioncall  go to state 27


state 49

   22 expr: expr ADD . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 71
    functioncall  go to state 27


state 50

   26 expr: expr MOD . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 72
    functioncall  go to state 27


state 51

   25 expr: expr DIV . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 73
    functioncall  go to state 27


state 52

   24 expr: expr MUL . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 74
    functioncall  go to state 27


state 53

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   53 print: PRINT '(' expr . ')'

    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52
    ')'   shift, and go to state 75


state 54

   39 if: IF expr THEN . bloco END
   40   | IF expr THEN . bloco ELSE bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 76
    openc  go to state 4


state 55

   41 while: WHILE expr DO . bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 77
    openc  go to state 4


state 56

   42 function: FUNCTION ID '(' . _param ')' bloco END

    ID  shift, and go to state 78

    $default  reduce using rule 44 (_param)

    _param      go to state 79
    _paramlist  go to state 80


state 57

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   50 _arglist: expr .

    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52

    $default  reduce using rule 50 (_arglist)


state 58

   47 functioncall: ID '(' _arg . ')'

    ')'  shift, and go to state 81


state 59

   48 _arg: _arglist .
   51 _arglist: _arglist . ',' expr

    ','  shift, and go to state 82

    $default  reduce using rule 48 (_arg)


state 60

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   38 attr: ID '=' expr .

    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52

    $default  reduce using rule 38 (attr)


state 61

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


state 62

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   37     | expr OR expr .

    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52

    $default  reduce using rule 37 (expr)


state 63

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   36     | expr AND expr .
   37     | expr . OR expr

    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52

    $default  reduce using rule 36 (expr)


state 64

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   21     | expr GE expr .
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    SUB  shift, and go to state 48
    ADD  shift, and go to state 49
    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 21 (expr)


state 65

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   20     | expr LE expr .
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    SUB  shift, and go to state 48
    ADD  shift, and go to state 49
    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 20 (expr)


state 66

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   17     | expr LESS expr .
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    SUB  shift, and go to state 48
    ADD  shift, and go to state 49
    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 17 (expr)


state 67

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   18     | expr BIGG expr .
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    SUB  shift, and go to state 48
    ADD  shift, and go to state 49
    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 18 (expr)


state 68

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   19     | expr NE expr .
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    SUB  shift, and go to state 48
    ADD  shift, and go to state 49
    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 19 (expr)


state 69

   16 expr: expr . EQ expr
   16     | expr EQ expr .
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    SUB  shift, and go to state 48
    ADD  shift, and go to state 49
    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 16 (expr)


state 70

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   23     | expr SUB expr .
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 23 (expr)


state 71

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   22     | expr ADD expr .
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    MOD  shift, and go to state 50
    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 22 (expr)


state 72

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   26     | expr MOD expr .
   36     | expr . AND expr
   37     | expr . OR expr

    $default  reduce using rule 26 (expr)


state 73

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   25     | expr DIV expr .
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    $default  reduce using rule 25 (expr)


state 74

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   24     | expr MUL expr .
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr

    $default  reduce using rule 24 (expr)


state 75

   53 print: PRINT '(' expr ')' .

    $default  reduce using rule 53 (print)


state 76

   39 if: IF expr THEN bloco . END
   40   | IF expr THEN bloco . ELSE bloco END

    ELSE  shift, and go to state 83
    END   shift, and go to state 84


state 77

   41 while: WHILE expr DO bloco . END

    END  shift, and go to state 85


state 78

   45 _paramlist: ID .

    $default  reduce using rule 45 (_paramlist)


state 79

   42 function: FUNCTION ID '(' _param . ')' bloco END

    ')'  shift, and go to state 86


state 80

   43 _param: _paramlist .
   46 _paramlist: _paramlist . ',' ID

    ','  shift, and go to state 87

    $default  reduce using rule 43 (_param)


state 81

   47 functioncall: ID '(' _arg ')' .

    $default  reduce using rule 47 (functioncall)


state 82

   51 _arglist: _arglist ',' . expr

    NIL     shift, and go to state 6
    NUMBER  shift, and go to state 12
    STRING  shift, and go to state 13
    ID      shift, and go to state 31
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    NOT     shift, and go to state 17
    '('     shift, and go to state 18
    '-'     shift, and go to state 19

    expr          go to state 88
    functioncall  go to state 27


state 83

   40 if: IF expr THEN bloco ELSE . bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 89
    openc  go to state 4


state 84

   39 if: IF expr THEN bloco END .

    $default  reduce using rule 39 (if)


state 85

   41 while: WHILE expr DO bloco END .

    $default  reduce using rule 41 (while)


state 86

   42 function: FUNCTION ID '(' _param ')' . bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 90
    openc  go to state 4


state 87

   46 _paramlist: _paramlist ',' . ID

    ID  shift, and go to state 91


state 88

   16 expr: expr . EQ expr
   17     | expr . LESS expr
   18     | expr . BIGG expr
   19     | expr . NE expr
   20     | expr . LE expr
   21     | expr . GE expr
   22     | expr . ADD expr
   23     | expr . SUB expr
   24     | expr . MUL expr
   25     | expr . DIV expr
   26     | expr . MOD expr
   36     | expr . AND expr
   37     | expr . OR expr
   51 _arglist: _arglist ',' expr .

    OR    shift, and go to state 40
    AND   shift, and go to state 41
    GE    shift, and go to state 42
    LE    shift, and go to state 43
    LESS  shift, and go to state 44
    BIGG  shift, and go to state 45
    NE    shift, and go to state 46
    EQ    shift, and go to state 47
    SUB   shift, and go to state 48
    ADD   shift, and go to state 49
    MOD   shift, and go to state 50
    DIV   shift, and go to state 51
    MUL   shift, and go to state 52

    $default  reduce using rule 51 (_arglist)


state 89

   40 if: IF expr THEN bloco ELSE bloco . END

    END  shift, and go to state 92


state 90

   42 function: FUNCTION ID '(' _param ')' bloco . END

    END  shift, and go to state 93


state 91

   46 _paramlist: _paramlist ',' ID .

    $default  reduce using rule 46 (_paramlist)


state 92

   40 if: IF expr THEN bloco ELSE bloco END .

    $default  reduce using rule 40 (if)


state 93

   42 function: FUNCTION ID '(' _param ')' bloco END .

    $default  reduce using rule 42 (function)
