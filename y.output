Terminals unused in grammar

   ELSEIF
   BREAK
   LOCAL
   FUNCTION_C
   T_INT
   T_REAL
   LAB
   GOTO
   BLOCO
   STMTS
   EXPR
   ATTR
   CONC
   '^'


State 1 conflicts: 1 shift/reduce
State 5 conflicts: 15 shift/reduce
State 15 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program bloco
    2        | /* empty */

    3 bloco: openc stmts ret closec

    4 openc: /* empty */

    5 closec: /* empty */

    6 stmts: stmts stmt
    7      | /* empty */

    8 stmt: expr
    9     | print
   10     | if
   11     | while
   12     | function
   13     | attr

   14 expr: '(' expr ')'
   15     | expr EQ expr
   16     | expr LESS expr
   17     | expr BIGG expr
   18     | expr NE expr
   19     | expr LE expr
   20     | expr GE expr
   21     | expr ADD expr
   22     | expr SUB expr
   23     | expr MUL expr
   24     | expr DIV expr
   25     | expr MOD expr
   26     | '-' expr
   27     | NUMBER
   28     | ID
   29     | STRING
   30     | functioncall
   31     | NIL
   32     | TRUE
   33     | FALSE
   34     | NOT expr
   35     | expr AND expr
   36     | expr OR expr
   37     | READ

   38 attr: ID '=' expr

   39 if: IF expr THEN bloco END
   40   | IF expr THEN bloco ELSE bloco END

   41 while: WHILE expr DO bloco END

   42 $@1: /* empty */

   43 function: FUNCTION ID $@1 '(' _param ')' bloco END

   44 _param: _paramlist
   45       | /* empty */

   46 _paramlist: ID
   47           | _paramlist ',' ID

   48 ret: /* empty */
   49    | RETURN expr

   50 functioncall: ID '(' _arg ')'

   51 _arg: _arglist
   52     | /* empty */

   53 _arglist: expr
   54         | _arglist ',' expr

   55 print: PRINT '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 43 50 55
')' (41) 14 43 50 55
',' (44) 47 54
'-' (45) 26
'=' (61) 38
'^' (94)
error (256)
NIL (258) 31
PRINT (259) 55
READ (260) 37
IF (261) 39 40
THEN (262) 39 40
ELSE (263) 40
ELSEIF (264)
WHILE (265) 41
DO (266) 41
END (267) 39 40 41 43
BREAK (268)
RETURN (269) 49
LOCAL (270)
FUNCTION (271) 43
FUNCTION_C (272)
NUMBER (273) 27
STRING (274) 29
ID (275) 28 38 43 46 47 50
T_INT (276)
T_REAL (277)
LAB (278)
GOTO (279)
BLOCO (280)
STMTS (281)
EXPR (282)
ATTR (283)
TRUE (284) 32
FALSE (285) 33
OR (286) 36
AND (287) 35
GE (288) 20
LE (289) 19
LESS (290) 16
BIGG (291) 17
NE (292) 18
EQ (293) 15
CONC (294)
SUB (295) 22
ADD (296) 21
MOD (297) 25
DIV (298) 24
MUL (299) 23
NOT (300) 34
UNARY (301)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
bloco (55)
    on left: 3, on right: 1 39 40 41 43
openc (56)
    on left: 4, on right: 3
closec (57)
    on left: 5, on right: 3
stmts (58)
    on left: 6 7, on right: 3 6
stmt (59)
    on left: 8 9 10 11 12 13, on right: 6
expr (60)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37, on right: 8 14 15 16 17 18 19 20 21 22 23 24
    25 26 34 35 36 38 39 40 41 49 53 54 55
attr (61)
    on left: 38, on right: 13
if (62)
    on left: 39 40, on right: 10
while (63)
    on left: 41, on right: 11
function (64)
    on left: 43, on right: 12
$@1 (65)
    on left: 42, on right: 43
_param (66)
    on left: 44 45, on right: 43
_paramlist (67)
    on left: 46 47, on right: 44 47
ret (68)
    on left: 48 49, on right: 3
functioncall (69)
    on left: 50, on right: 30
_arg (70)
    on left: 51 52, on right: 50
_arglist (71)
    on left: 53 54, on right: 51 54
print (72)
    on left: 55, on right: 9


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . bloco

    $end  shift, and go to state 2

    $end      [reduce using rule 4 (openc)]
    $default  reduce using rule 4 (openc)

    bloco  go to state 3
    openc  go to state 4


state 2

    0 $accept: program $end .

    $default  accept


state 3

    1 program: program bloco .

    $default  reduce using rule 1 (program)


state 4

    3 bloco: openc . stmts ret closec

    $default  reduce using rule 7 (stmts)

    stmts  go to state 5


state 5

    3 bloco: openc stmts . ret closec
    6 stmts: stmts . stmt

    NIL       shift, and go to state 6
    PRINT     shift, and go to state 7
    READ      shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    RETURN    shift, and go to state 11
    FUNCTION  shift, and go to state 12
    NUMBER    shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    TRUE      shift, and go to state 16
    FALSE     shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19
    '-'       shift, and go to state 20

    NIL       [reduce using rule 48 (ret)]
    PRINT     [reduce using rule 48 (ret)]
    READ      [reduce using rule 48 (ret)]
    IF        [reduce using rule 48 (ret)]
    WHILE     [reduce using rule 48 (ret)]
    RETURN    [reduce using rule 48 (ret)]
    FUNCTION  [reduce using rule 48 (ret)]
    NUMBER    [reduce using rule 48 (ret)]
    STRING    [reduce using rule 48 (ret)]
    ID        [reduce using rule 48 (ret)]
    TRUE      [reduce using rule 48 (ret)]
    FALSE     [reduce using rule 48 (ret)]
    NOT       [reduce using rule 48 (ret)]
    '('       [reduce using rule 48 (ret)]
    '-'       [reduce using rule 48 (ret)]
    $default  reduce using rule 48 (ret)

    stmt          go to state 21
    expr          go to state 22
    attr          go to state 23
    if            go to state 24
    while         go to state 25
    function      go to state 26
    ret           go to state 27
    functioncall  go to state 28
    print         go to state 29


state 6

   31 expr: NIL .

    $default  reduce using rule 31 (expr)


state 7

   55 print: PRINT . '(' expr ')'

    '('  shift, and go to state 30


state 8

   37 expr: READ .

    $default  reduce using rule 37 (expr)


state 9

   39 if: IF . expr THEN bloco END
   40   | IF . expr THEN bloco ELSE bloco END

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 32
    functioncall  go to state 28


state 10

   41 while: WHILE . expr DO bloco END

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 33
    functioncall  go to state 28


state 11

   49 ret: RETURN . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 34
    functioncall  go to state 28


state 12

   43 function: FUNCTION . ID $@1 '(' _param ')' bloco END

    ID  shift, and go to state 35


state 13

   27 expr: NUMBER .

    $default  reduce using rule 27 (expr)


state 14

   29 expr: STRING .

    $default  reduce using rule 29 (expr)


state 15

   28 expr: ID .
   38 attr: ID . '=' expr
   50 functioncall: ID . '(' _arg ')'

    '('  shift, and go to state 36
    '='  shift, and go to state 37

    '('       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


state 16

   32 expr: TRUE .

    $default  reduce using rule 32 (expr)


state 17

   33 expr: FALSE .

    $default  reduce using rule 33 (expr)


state 18

   34 expr: NOT . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 38
    functioncall  go to state 28


state 19

   14 expr: '(' . expr ')'

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 39
    functioncall  go to state 28


state 20

   26 expr: '-' . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 40
    functioncall  go to state 28


state 21

    6 stmts: stmts stmt .

    $default  reduce using rule 6 (stmts)


state 22

    8 stmt: expr .
   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 8 (stmt)


state 23

   13 stmt: attr .

    $default  reduce using rule 13 (stmt)


state 24

   10 stmt: if .

    $default  reduce using rule 10 (stmt)


state 25

   11 stmt: while .

    $default  reduce using rule 11 (stmt)


state 26

   12 stmt: function .

    $default  reduce using rule 12 (stmt)


state 27

    3 bloco: openc stmts ret . closec

    $default  reduce using rule 5 (closec)

    closec  go to state 54


state 28

   30 expr: functioncall .

    $default  reduce using rule 30 (expr)


state 29

    9 stmt: print .

    $default  reduce using rule 9 (stmt)


state 30

   55 print: PRINT '(' . expr ')'

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 55
    functioncall  go to state 28


state 31

   28 expr: ID .
   50 functioncall: ID . '(' _arg ')'

    '('  shift, and go to state 36

    '('       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


state 32

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   39 if: IF expr . THEN bloco END
   40   | IF expr . THEN bloco ELSE bloco END

    THEN  shift, and go to state 56
    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53


state 33

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   41 while: WHILE expr . DO bloco END

    DO    shift, and go to state 57
    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53


state 34

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   49 ret: RETURN expr .

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 49 (ret)


state 35

   43 function: FUNCTION ID . $@1 '(' _param ')' bloco END

    $default  reduce using rule 42 ($@1)

    $@1  go to state 58


state 36

   50 functioncall: ID '(' . _arg ')'

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    $default  reduce using rule 52 (_arg)

    expr          go to state 59
    functioncall  go to state 28
    _arg          go to state 60
    _arglist      go to state 61


state 37

   38 attr: ID '=' . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 62
    functioncall  go to state 28


state 38

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   34     | NOT expr .
   35     | expr . AND expr
   36     | expr . OR expr

    $default  reduce using rule 34 (expr)


state 39

   14 expr: '(' expr . ')'
   15     | expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53
    ')'   shift, and go to state 63


state 40

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   26     | '-' expr .
   35     | expr . AND expr
   36     | expr . OR expr

    $default  reduce using rule 26 (expr)


state 41

   36 expr: expr OR . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 64
    functioncall  go to state 28


state 42

   35 expr: expr AND . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 65
    functioncall  go to state 28


state 43

   20 expr: expr GE . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 66
    functioncall  go to state 28


state 44

   19 expr: expr LE . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 67
    functioncall  go to state 28


state 45

   16 expr: expr LESS . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 68
    functioncall  go to state 28


state 46

   17 expr: expr BIGG . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 69
    functioncall  go to state 28


state 47

   18 expr: expr NE . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 70
    functioncall  go to state 28


state 48

   15 expr: expr EQ . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 71
    functioncall  go to state 28


state 49

   22 expr: expr SUB . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 72
    functioncall  go to state 28


state 50

   21 expr: expr ADD . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 73
    functioncall  go to state 28


state 51

   25 expr: expr MOD . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 74
    functioncall  go to state 28


state 52

   24 expr: expr DIV . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 75
    functioncall  go to state 28


state 53

   23 expr: expr MUL . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 76
    functioncall  go to state 28


state 54

    3 bloco: openc stmts ret closec .

    $default  reduce using rule 3 (bloco)


state 55

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   55 print: PRINT '(' expr . ')'

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53
    ')'   shift, and go to state 77


state 56

   39 if: IF expr THEN . bloco END
   40   | IF expr THEN . bloco ELSE bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 78
    openc  go to state 4


state 57

   41 while: WHILE expr DO . bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 79
    openc  go to state 4


state 58

   43 function: FUNCTION ID $@1 . '(' _param ')' bloco END

    '('  shift, and go to state 80


state 59

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   53 _arglist: expr .

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 53 (_arglist)


state 60

   50 functioncall: ID '(' _arg . ')'

    ')'  shift, and go to state 81


state 61

   51 _arg: _arglist .
   54 _arglist: _arglist . ',' expr

    ','  shift, and go to state 82

    $default  reduce using rule 51 (_arg)


state 62

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   38 attr: ID '=' expr .

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 38 (attr)


state 63

   14 expr: '(' expr ')' .

    $default  reduce using rule 14 (expr)


state 64

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   36     | expr OR expr .

    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 36 (expr)


state 65

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   35     | expr AND expr .
   36     | expr . OR expr

    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 35 (expr)


state 66

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   20     | expr GE expr .
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50
    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 20 (expr)


state 67

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   19     | expr LE expr .
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50
    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 19 (expr)


state 68

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   16     | expr LESS expr .
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50
    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 16 (expr)


state 69

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   17     | expr BIGG expr .
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50
    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 17 (expr)


state 70

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   18     | expr NE expr .
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50
    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 18 (expr)


state 71

   15 expr: expr . EQ expr
   15     | expr EQ expr .
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50
    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 15 (expr)


state 72

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   22     | expr SUB expr .
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 22 (expr)


state 73

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   21     | expr ADD expr .
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    MOD  shift, and go to state 51
    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 21 (expr)


state 74

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   25     | expr MOD expr .
   35     | expr . AND expr
   36     | expr . OR expr

    $default  reduce using rule 25 (expr)


state 75

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   24     | expr DIV expr .
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    $default  reduce using rule 24 (expr)


state 76

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   23     | expr MUL expr .
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr

    $default  reduce using rule 23 (expr)


state 77

   55 print: PRINT '(' expr ')' .

    $default  reduce using rule 55 (print)


state 78

   39 if: IF expr THEN bloco . END
   40   | IF expr THEN bloco . ELSE bloco END

    ELSE  shift, and go to state 83
    END   shift, and go to state 84


state 79

   41 while: WHILE expr DO bloco . END

    END  shift, and go to state 85


state 80

   43 function: FUNCTION ID $@1 '(' . _param ')' bloco END

    ID  shift, and go to state 86

    $default  reduce using rule 45 (_param)

    _param      go to state 87
    _paramlist  go to state 88


state 81

   50 functioncall: ID '(' _arg ')' .

    $default  reduce using rule 50 (functioncall)


state 82

   54 _arglist: _arglist ',' . expr

    NIL     shift, and go to state 6
    READ    shift, and go to state 8
    NUMBER  shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 31
    TRUE    shift, and go to state 16
    FALSE   shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '-'     shift, and go to state 20

    expr          go to state 89
    functioncall  go to state 28


state 83

   40 if: IF expr THEN bloco ELSE . bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 90
    openc  go to state 4


state 84

   39 if: IF expr THEN bloco END .

    $default  reduce using rule 39 (if)


state 85

   41 while: WHILE expr DO bloco END .

    $default  reduce using rule 41 (while)


state 86

   46 _paramlist: ID .

    $default  reduce using rule 46 (_paramlist)


state 87

   43 function: FUNCTION ID $@1 '(' _param . ')' bloco END

    ')'  shift, and go to state 91


state 88

   44 _param: _paramlist .
   47 _paramlist: _paramlist . ',' ID

    ','  shift, and go to state 92

    $default  reduce using rule 44 (_param)


state 89

   15 expr: expr . EQ expr
   16     | expr . LESS expr
   17     | expr . BIGG expr
   18     | expr . NE expr
   19     | expr . LE expr
   20     | expr . GE expr
   21     | expr . ADD expr
   22     | expr . SUB expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | expr . MOD expr
   35     | expr . AND expr
   36     | expr . OR expr
   54 _arglist: _arglist ',' expr .

    OR    shift, and go to state 41
    AND   shift, and go to state 42
    GE    shift, and go to state 43
    LE    shift, and go to state 44
    LESS  shift, and go to state 45
    BIGG  shift, and go to state 46
    NE    shift, and go to state 47
    EQ    shift, and go to state 48
    SUB   shift, and go to state 49
    ADD   shift, and go to state 50
    MOD   shift, and go to state 51
    DIV   shift, and go to state 52
    MUL   shift, and go to state 53

    $default  reduce using rule 54 (_arglist)


state 90

   40 if: IF expr THEN bloco ELSE bloco . END

    END  shift, and go to state 93


state 91

   43 function: FUNCTION ID $@1 '(' _param ')' . bloco END

    $default  reduce using rule 4 (openc)

    bloco  go to state 94
    openc  go to state 4


state 92

   47 _paramlist: _paramlist ',' . ID

    ID  shift, and go to state 95


state 93

   40 if: IF expr THEN bloco ELSE bloco END .

    $default  reduce using rule 40 (if)


state 94

   43 function: FUNCTION ID $@1 '(' _param ')' bloco . END

    END  shift, and go to state 96


state 95

   47 _paramlist: _paramlist ',' ID .

    $default  reduce using rule 47 (_paramlist)


state 96

   43 function: FUNCTION ID $@1 '(' _param ')' bloco END .

    $default  reduce using rule 43 (function)
